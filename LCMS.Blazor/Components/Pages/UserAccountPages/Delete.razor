@page "/useraccounts/delete"
@using Microsoft.AspNetCore.Authorization
@using LCMS.Models
@using LCMS.Services.Interfaces
@using LCMS.Blazor.Components.Pages.BaseClasses
@inject NavigationManager NavigationManager
@inject IServiceProvider ServiceProvider
@attribute [Authorize(Roles = "Admin")]
@inherits AuthenticatedPageBase

<PageTitle>Delete</PageTitle>

<h1>Delete User Account</h1>
<hr />
<p>Are you sure you want to delete this?</p>
<div>
    @if (model is null)
    {
        <p><em>Loading...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-2">UserName</dt>
            <dd class="col-sm-10">@model.UserName</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">IsActive</dt>
            <dd class="col-sm-10">@model.IsActive</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">IsDeleted</dt>
            <dd class="col-sm-10">@model.IsDeleted</dd>
        </dl>
        <EditForm method="post" Model="model" OnValidSubmit="DeleteUserAccount" FormName="delete" Enhance>
            <button type="submit" class="btn btn-danger" disabled="@(model is null)">Delete</button> |
            <a href="/useraccounts">Back to List</a>
        </EditForm>
    }
</div>

@code {
    private UserAccountModel? model;

    [SupplyParameterFromQuery]
    private int Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var service = ServiceProvider.GetRequiredService<IUserAccountService>();
        model = service.GetUserAccount(Id);
        if (model is null)
        {
            NavigationManager.NavigateTo("notfound");
        }

        await base.OnInitializedAsync();
    }

    private void DeleteUserAccount()
    {
        var service = ServiceProvider.GetRequiredService<IUserAccountService>();
        service.DeleteUserAccount(Id, _currentUserId);
        NavigationManager.NavigateTo("/useraccounts");
    }
}
